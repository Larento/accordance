{"version":3,"file":"manifest.js","sourceRoot":"","sources":["../../src/utils/manifest.ts"],"names":[],"mappings":";;AAAA,2BAA8B;AAC9B,yBAA2B;AAC3B,uDAA+C;AAG/C,IAAM,mBAAmB,GAAG,CAAC,CAAC,IAAI,CAAC;IAC/B,IAAI,EAAE,CAAC,CAAC,MAAM;IACd,OAAO,EAAE,CAAC,CAAC,MAAM;IACjB,WAAW,EAAE,CAAC,CAAC,MAAM;CACxB,CAAC,CAAC;AAGU,QAAA,cAAc,GAAG;IAC1B,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC;IACtF,IAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;IACvC,OAAO,mBAAmB;SACrB,MAAM,CAAC,QAAQ,CAAC;SAChB,UAAU,CAAC,UAAC,MAAM;QACf,MAAM,IAAI,KAAK,CAAC,sBAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;AACX,CAAC,CAAC","sourcesContent":["import path = require('path');\nimport * as t from 'io-ts';\nimport {failure} from 'io-ts/lib/PathReporter';\n\n\nconst NodePackageManifest = t.type({\n    name: t.string,\n    version: t.string,\n    description: t.string,\n});\n\n\nexport const getPackageInfo = function() {\n    const manifestPath = path.normalize(path.join(__dirname, '..', '..', 'package.json'));\n    const manifest = require(manifestPath);\n    return NodePackageManifest\n        .decode(manifest)\n        .getOrElseL((errors) => {\n            throw new Error(failure(errors).join('\\n'));\n        });\n};\n"]}